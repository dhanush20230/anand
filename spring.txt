Usercontroller:

package com.example.demo.controller;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;


@RestController
@RequestMapping("/users")
public class Usercontroller {
@Autowired
private UserRepository userRepository;

@GetMapping
public List<User> getAllUser()
{
	return this.userRepository.findAll();
}

@GetMapping("/{id}")
public User getUserById(@PathVariable(value="id") long userId) {
	return this.userRepository.findById(userId)
			.orElseThrow();

}
@PostMapping
public User createUser(@RequestBody User user)
{
	return this.userRepository.save(user);
}
@PutMapping("/{id}")
public User updateUser(@RequestBody User user,@PathVariable("id") long userId)
{
	//return this.userRepository.save(user);
	User ex=this.userRepository.findById(userId)
			.orElseThrow();
	ex.setFirstname(user.getFirstname());
	ex.setLasttname(user.getLasttname());
	return this.userRepository.save(ex);
}
@DeleteMapping("/{id}")
public ResponseEntity<User> deleteUser(@PathVariable("id") long userId)
{
	User ex=this.userRepository.findById(userId).
			orElseThrow();
	this.userRepository.delete(ex);
	return ResponseEntity.ok().build();	
}
}

 User:

package com.example.demo.entity;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;

@Entity
@Table(name="user")
public class User {
	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	private Long id;
	private String firstname;
	private String lasttname;
	public Long getId() {
		return id;
	}
	public void setId(Long id) {
		this.id = id;
	}
	public String getFirstname() {
		return firstname;
	}
	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}
	public String getLasttname() {
		return lasttname;
	}
	public void setLasttname(String lasttname) {
		this.lasttname = lasttname;
	}
	
	public User() {
		
	}
	
	public User(Long id, String firstname, String lasttname) {
		super();
		this.id = id;
		this.firstname = firstname;
		this.lasttname = lasttname;
	}
	

}

UserRepository

package com.example.demo.repository;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;


@Repository
public interface UserRepository extends JpaRepository <User,Long>{ 

}


application.properties

spring.datasource.url=jdbc:mysql://localhost:3306/sys
spring.datasource.username=root
spring.datasource.password=cse@136
server.port=8090
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update 

